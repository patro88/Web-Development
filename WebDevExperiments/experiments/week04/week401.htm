<!DOCTYPE html>
<html>
<head>
    <title> Angular JS - Introduction </title>
    <link rel="stylesheet" href="../css/week401.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://getbootstrap.com/assets/css/docs.min.css">

    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.13/angular.min.js"></script>
    <script src="../js/week04.js"></script>


</head>
<body ng-app="personApp" ng-controller="personController">
    <div class="container">
        <h1>Angular JS - Introduction</h1>
        <hr />
        <h2> Description: </h2>
        <p>
            AngularJS is a JavaScript framework. It can be added to an HTML page with a &lt;script&gt; tag.
            AngularJS extends HTML attributes with Directives, and binds data to HTML with Expressions.
            As a first example, I built a simple application that binds a model to a controller.
        </p>
        <hr />
        <div>

            First Name: <input type="text" ng-model="firstName"><br>
            Last Name: <input type="text" ng-model="lastName"><br>
            <br>
            <strong>Full Name: </strong>{{firstName + " " + lastName}}

        </div>

        <br />
        <div>
            <h4>Code Snippet :</h4>
            <code>
                &emsp;&emsp;&lt;div ng-app="personApp" ng-controller="personController"&gt;<br />
                &emsp;&emsp; First Name: &lt;input type="text" ng-model="firstName"&gt;<br />
                &emsp;&emsp; Last Name: &lt;input type="text" ng-model="lastName"&gt;<br />
            </code><br />
            <p>
                The ng-app directive tells AngularJS that the &lt;div&gt; element is the "owner" of an AngularJS application.<br />
                The ng-model directive binds the value of the input field to the application variable name.<br />
                The ng-controller directive defines the controller.The controller code will execute when the page loads.
            </p>
            <code>
                &emsp;&emsp;var app = angular.module("personApp", []);<br />
                &emsp;&emsp;app.controller("personController", function ($scope) {<br />
                &emsp;&emsp;&emsp;&emsp;$scope.firstName = "Shakti";<br />
                &emsp;&emsp;&emsp;&emsp;$scope.lastName = "Patro";<br />
                &emsp;&emsp;});<br />
            </code><br />
            <p>&emsp;This links the form and the model. This means that any changes to the control update the data in your model, and when you change the model it updates the control.</p>
            <code ng-non-bindable>
                &emsp;&emsp; Full Name: {{firstName + " " + lastName}}
            </code><br /><br />
            <p>
                &emsp;The <code ng-non-bindable>{{ }} </code>are a declarative way of specifying data binding locations in the HTML. AngularJS will automatically update this text whenever the <code>firstName</code> and <code>lastName</code>property changes.
            </p>

        </div>
        <hr />

        <div>
            <h2> A Naviagtion Menu: </h2>
            <p>Based on the previous experiment , I tried to create a navbar. When a navigation tab is clicked the active component is stored and displayed.</p>
            <div id="main">
                <nav class="{{active}} navbar navbar-inverse non-click" ng-click="$event.preventdefault()">

                    <a href="#" class="home" ng-click="active='home'">Home</a>
                    <a href="#" class="projects" ng-click="active='projects'">Projects</a>
                    <a href="#" class="services" ng-click="active='services'">Services</a>
                    <a href="#" class="contact" ng-click="active='contact'">Contact</a>
                </nav>

                <p ng-hide="active">Please click a menu item</p>
                <p ng-show="active">You chose <b>{{active}}</b></p>

            </div>
            <div>
                <h4>Code Snippet :</h4>
                <code ng-non-bindable>
                    &emsp;&emsp;&lt;nav class="{{active}} navbar navbar-inverse" ng-click="$event.preventdefault()"&gt;<br />
                </code><br />
                <p>
                    The ng-click has a call to the preventDefault() function as it stops the default behaviour of link to go to the top of the page.
                </p><br />
                <code>
                    &emsp;&emsp;&lt;a href="#" class="home" ng-click="active='home'">Home&lt;/a&gt;<br />
                    &emsp;&emsp;&lt;a href="#" class="projects" ng-click="active='projects'">Projects&lt;/a&gt;
                    &emsp;&emsp;&lt;a href="#" class="services" ng-click="active='services'">Services&lt;/a&gt;<br />
                    &emsp;&emsp;&lt;a href="#" class="contact" ng-click="active='contact'">Contact&lt;/a&gt;<br />
                </code><br />
                <p>
                    The ng-click is used to store information as string in the scope variable 'active' dynamically.
                    <br /> NOTE: I used <code>ng-non-bindable attribute </code> to show <code ng-non-bindable> {{  }}</code>.
                </p><br />
                <code ng-non-bindable>
                    &emsp;&emsp;&lt;p ng-show="active"&gt;You chose {{active}} &lt;/p&gt;<br />
                </code><br />
                <p ng-non-bindable>
                    The stored attribute is displayed when clicked using {{ }}
                </p><br />
            </div>
            <hr />

        </div>

        <h3> View Source : </h3>
        <a href="../../fileview/Default.aspx?~/experiments/week04/week401.htm" target="_blank"> HTML </a><br />
        <a href="../../fileview/Default.aspx?~/experiments/css/week401.css" target="_blank"> CSS </a><br />
        <a href="../../fileview/Default.aspx?~/experiments/js/week04.js" target="_blank"> JS </a>
        <p>
            <h3> Reference :</h3>
            <a href="https://angularjs.org/" target="_blank"> Angular JS </a><br />
        </p>

        <hr />
    </div>
    


</body>
</html>